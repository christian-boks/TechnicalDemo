/**
 * @fileoverview gRPC-Web generated client stub for BackendApi
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.0
// source: backend_api.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as backend_api_pb from './backend_api_pb'; // proto import: "backend_api.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class BackendApiClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllDistricts = new grpcWeb.MethodDescriptor(
    '/BackendApi.BackendApi/GetAllDistricts',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    backend_api_pb.GetAllDistrictsReply,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    backend_api_pb.GetAllDistrictsReply.deserializeBinary
  );

  getAllDistricts(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<backend_api_pb.GetAllDistrictsReply>;

  getAllDistricts(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllDistrictsReply) => void): grpcWeb.ClientReadableStream<backend_api_pb.GetAllDistrictsReply>;

  getAllDistricts(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllDistrictsReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/BackendApi.BackendApi/GetAllDistricts',
        request,
        metadata || {},
        this.methodDescriptorGetAllDistricts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/BackendApi.BackendApi/GetAllDistricts',
    request,
    metadata || {},
    this.methodDescriptorGetAllDistricts);
  }

  methodDescriptorGetAllSalesPersonsForDistrict = new grpcWeb.MethodDescriptor(
    '/BackendApi.BackendApi/GetAllSalesPersonsForDistrict',
    grpcWeb.MethodType.UNARY,
    backend_api_pb.GetAllSalesPersonsForDistrictRequest,
    backend_api_pb.GetAllSalesPersonsForDistrictReply,
    (request: backend_api_pb.GetAllSalesPersonsForDistrictRequest) => {
      return request.serializeBinary();
    },
    backend_api_pb.GetAllSalesPersonsForDistrictReply.deserializeBinary
  );

  getAllSalesPersonsForDistrict(
    request: backend_api_pb.GetAllSalesPersonsForDistrictRequest,
    metadata?: grpcWeb.Metadata | null): Promise<backend_api_pb.GetAllSalesPersonsForDistrictReply>;

  getAllSalesPersonsForDistrict(
    request: backend_api_pb.GetAllSalesPersonsForDistrictRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllSalesPersonsForDistrictReply) => void): grpcWeb.ClientReadableStream<backend_api_pb.GetAllSalesPersonsForDistrictReply>;

  getAllSalesPersonsForDistrict(
    request: backend_api_pb.GetAllSalesPersonsForDistrictRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllSalesPersonsForDistrictReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/BackendApi.BackendApi/GetAllSalesPersonsForDistrict',
        request,
        metadata || {},
        this.methodDescriptorGetAllSalesPersonsForDistrict,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/BackendApi.BackendApi/GetAllSalesPersonsForDistrict',
    request,
    metadata || {},
    this.methodDescriptorGetAllSalesPersonsForDistrict);
  }

  methodDescriptorAddSalesPersonToDistrict = new grpcWeb.MethodDescriptor(
    '/BackendApi.BackendApi/AddSalesPersonToDistrict',
    grpcWeb.MethodType.UNARY,
    backend_api_pb.AddSalesPersonToDistrictRequest,
    google_protobuf_empty_pb.Empty,
    (request: backend_api_pb.AddSalesPersonToDistrictRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addSalesPersonToDistrict(
    request: backend_api_pb.AddSalesPersonToDistrictRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addSalesPersonToDistrict(
    request: backend_api_pb.AddSalesPersonToDistrictRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addSalesPersonToDistrict(
    request: backend_api_pb.AddSalesPersonToDistrictRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/BackendApi.BackendApi/AddSalesPersonToDistrict',
        request,
        metadata || {},
        this.methodDescriptorAddSalesPersonToDistrict,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/BackendApi.BackendApi/AddSalesPersonToDistrict',
    request,
    metadata || {},
    this.methodDescriptorAddSalesPersonToDistrict);
  }

  methodDescriptorRemoveSalesPersonFromDistrict = new grpcWeb.MethodDescriptor(
    '/BackendApi.BackendApi/RemoveSalesPersonFromDistrict',
    grpcWeb.MethodType.UNARY,
    backend_api_pb.RemoveSalesPersonFromDistrictRequest,
    google_protobuf_empty_pb.Empty,
    (request: backend_api_pb.RemoveSalesPersonFromDistrictRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeSalesPersonFromDistrict(
    request: backend_api_pb.RemoveSalesPersonFromDistrictRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeSalesPersonFromDistrict(
    request: backend_api_pb.RemoveSalesPersonFromDistrictRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeSalesPersonFromDistrict(
    request: backend_api_pb.RemoveSalesPersonFromDistrictRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/BackendApi.BackendApi/RemoveSalesPersonFromDistrict',
        request,
        metadata || {},
        this.methodDescriptorRemoveSalesPersonFromDistrict,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/BackendApi.BackendApi/RemoveSalesPersonFromDistrict',
    request,
    metadata || {},
    this.methodDescriptorRemoveSalesPersonFromDistrict);
  }

  methodDescriptorGetAllStoresForDistrict = new grpcWeb.MethodDescriptor(
    '/BackendApi.BackendApi/GetAllStoresForDistrict',
    grpcWeb.MethodType.UNARY,
    backend_api_pb.GetAllStoresForDistrictRequest,
    backend_api_pb.GetAllStoresForDistrictReply,
    (request: backend_api_pb.GetAllStoresForDistrictRequest) => {
      return request.serializeBinary();
    },
    backend_api_pb.GetAllStoresForDistrictReply.deserializeBinary
  );

  getAllStoresForDistrict(
    request: backend_api_pb.GetAllStoresForDistrictRequest,
    metadata?: grpcWeb.Metadata | null): Promise<backend_api_pb.GetAllStoresForDistrictReply>;

  getAllStoresForDistrict(
    request: backend_api_pb.GetAllStoresForDistrictRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllStoresForDistrictReply) => void): grpcWeb.ClientReadableStream<backend_api_pb.GetAllStoresForDistrictReply>;

  getAllStoresForDistrict(
    request: backend_api_pb.GetAllStoresForDistrictRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: backend_api_pb.GetAllStoresForDistrictReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/BackendApi.BackendApi/GetAllStoresForDistrict',
        request,
        metadata || {},
        this.methodDescriptorGetAllStoresForDistrict,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/BackendApi.BackendApi/GetAllStoresForDistrict',
    request,
    metadata || {},
    this.methodDescriptorGetAllStoresForDistrict);
  }

}

