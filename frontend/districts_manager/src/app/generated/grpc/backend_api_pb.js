// source: backend_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import * as jspb from 'google-protobuf';

var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  (function () { return this; }).call(null) ||
  Function('return this')();

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.BackendApi.AddSalesPersonToDistrictRequest', null, global);
goog.exportSymbol('proto.BackendApi.District', null, global);
goog.exportSymbol('proto.BackendApi.GetAllDistrictsReply', null, global);
goog.exportSymbol('proto.BackendApi.GetAllSalesPersonsForDistrictReply', null, global);
goog.exportSymbol('proto.BackendApi.GetAllSalesPersonsForDistrictRequest', null, global);
goog.exportSymbol('proto.BackendApi.GetAllStoresForDistrictReply', null, global);
goog.exportSymbol('proto.BackendApi.GetAllStoresForDistrictRequest', null, global);
goog.exportSymbol('proto.BackendApi.RemoveSalesPersonFromDistrictRequest', null, global);
goog.exportSymbol('proto.BackendApi.SalesPerson', null, global);
goog.exportSymbol('proto.BackendApi.Store', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.GetAllDistrictsReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BackendApi.GetAllDistrictsReply.repeatedFields_, null);
};
goog.inherits(proto.BackendApi.GetAllDistrictsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.GetAllDistrictsReply.displayName = 'proto.BackendApi.GetAllDistrictsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.GetAllSalesPersonsForDistrictRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictRequest.displayName = 'proto.BackendApi.GetAllSalesPersonsForDistrictRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BackendApi.GetAllSalesPersonsForDistrictReply.repeatedFields_, null);
};
goog.inherits(proto.BackendApi.GetAllSalesPersonsForDistrictReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictReply.displayName = 'proto.BackendApi.GetAllSalesPersonsForDistrictReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.GetAllStoresForDistrictRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.GetAllStoresForDistrictRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.GetAllStoresForDistrictRequest.displayName = 'proto.BackendApi.GetAllStoresForDistrictRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.GetAllStoresForDistrictReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BackendApi.GetAllStoresForDistrictReply.repeatedFields_, null);
};
goog.inherits(proto.BackendApi.GetAllStoresForDistrictReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.GetAllStoresForDistrictReply.displayName = 'proto.BackendApi.GetAllStoresForDistrictReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.AddSalesPersonToDistrictRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.AddSalesPersonToDistrictRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.AddSalesPersonToDistrictRequest.displayName = 'proto.BackendApi.AddSalesPersonToDistrictRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.RemoveSalesPersonFromDistrictRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.RemoveSalesPersonFromDistrictRequest.displayName = 'proto.BackendApi.RemoveSalesPersonFromDistrictRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.SalesPerson = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.SalesPerson, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.SalesPerson.displayName = 'proto.BackendApi.SalesPerson';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.District = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.District, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.District.displayName = 'proto.BackendApi.District';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BackendApi.Store = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BackendApi.Store, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BackendApi.Store.displayName = 'proto.BackendApi.Store';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BackendApi.GetAllDistrictsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.GetAllDistrictsReply.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.GetAllDistrictsReply.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.GetAllDistrictsReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.GetAllDistrictsReply.toObject = function (includeInstance, msg) {
    var f, obj = {
      listList: jspb.Message.toObjectList(msg.getListList(),
        proto.BackendApi.District.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.GetAllDistrictsReply}
 */
proto.BackendApi.GetAllDistrictsReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.GetAllDistrictsReply;
  return proto.BackendApi.GetAllDistrictsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.GetAllDistrictsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.GetAllDistrictsReply}
 */
proto.BackendApi.GetAllDistrictsReply.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.BackendApi.District;
        reader.readMessage(value, proto.BackendApi.District.deserializeBinaryFromReader);
        msg.addList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.GetAllDistrictsReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.GetAllDistrictsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.GetAllDistrictsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.GetAllDistrictsReply.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.BackendApi.District.serializeBinaryToWriter
    );
  }
};


/**
 * repeated District list = 1;
 * @return {!Array<!proto.BackendApi.District>}
 */
proto.BackendApi.GetAllDistrictsReply.prototype.getListList = function () {
  return /** @type{!Array<!proto.BackendApi.District>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BackendApi.District, 1));
};


/**
 * @param {!Array<!proto.BackendApi.District>} value
 * @return {!proto.BackendApi.GetAllDistrictsReply} returns this
*/
proto.BackendApi.GetAllDistrictsReply.prototype.setListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.BackendApi.District=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BackendApi.District}
 */
proto.BackendApi.GetAllDistrictsReply.prototype.addList = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BackendApi.District, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BackendApi.GetAllDistrictsReply} returns this
 */
proto.BackendApi.GetAllDistrictsReply.prototype.clearListList = function () {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.GetAllSalesPersonsForDistrictRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      districtid: jspb.Message.getFieldWithDefault(msg, 1, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.GetAllSalesPersonsForDistrictRequest;
  return proto.BackendApi.GetAllSalesPersonsForDistrictRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDistrictid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.GetAllSalesPersonsForDistrictRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 districtId = 1;
 * @return {number}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.prototype.getDistrictid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictRequest} returns this
 */
proto.BackendApi.GetAllSalesPersonsForDistrictRequest.prototype.setDistrictid = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.GetAllSalesPersonsForDistrictReply.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.GetAllSalesPersonsForDistrictReply.toObject = function (includeInstance, msg) {
    var f, obj = {
      listList: jspb.Message.toObjectList(msg.getListList(),
        proto.BackendApi.SalesPerson.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictReply}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.GetAllSalesPersonsForDistrictReply;
  return proto.BackendApi.GetAllSalesPersonsForDistrictReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictReply}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.BackendApi.SalesPerson;
        reader.readMessage(value, proto.BackendApi.SalesPerson.deserializeBinaryFromReader);
        msg.addList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.GetAllSalesPersonsForDistrictReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.GetAllSalesPersonsForDistrictReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.BackendApi.SalesPerson.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SalesPerson list = 1;
 * @return {!Array<!proto.BackendApi.SalesPerson>}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.getListList = function () {
  return /** @type{!Array<!proto.BackendApi.SalesPerson>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BackendApi.SalesPerson, 1));
};


/**
 * @param {!Array<!proto.BackendApi.SalesPerson>} value
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictReply} returns this
*/
proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.setListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.BackendApi.SalesPerson=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BackendApi.SalesPerson}
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.addList = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BackendApi.SalesPerson, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BackendApi.GetAllSalesPersonsForDistrictReply} returns this
 */
proto.BackendApi.GetAllSalesPersonsForDistrictReply.prototype.clearListList = function () {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.GetAllStoresForDistrictRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.GetAllStoresForDistrictRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.GetAllStoresForDistrictRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.GetAllStoresForDistrictRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      districtid: jspb.Message.getFieldWithDefault(msg, 1, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.GetAllStoresForDistrictRequest}
 */
proto.BackendApi.GetAllStoresForDistrictRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.GetAllStoresForDistrictRequest;
  return proto.BackendApi.GetAllStoresForDistrictRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.GetAllStoresForDistrictRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.GetAllStoresForDistrictRequest}
 */
proto.BackendApi.GetAllStoresForDistrictRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDistrictid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.GetAllStoresForDistrictRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.GetAllStoresForDistrictRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.GetAllStoresForDistrictRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.GetAllStoresForDistrictRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 districtId = 1;
 * @return {number}
 */
proto.BackendApi.GetAllStoresForDistrictRequest.prototype.getDistrictid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.GetAllStoresForDistrictRequest} returns this
 */
proto.BackendApi.GetAllStoresForDistrictRequest.prototype.setDistrictid = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BackendApi.GetAllStoresForDistrictReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.GetAllStoresForDistrictReply.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.GetAllStoresForDistrictReply.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.GetAllStoresForDistrictReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.GetAllStoresForDistrictReply.toObject = function (includeInstance, msg) {
    var f, obj = {
      listList: jspb.Message.toObjectList(msg.getListList(),
        proto.BackendApi.Store.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.GetAllStoresForDistrictReply}
 */
proto.BackendApi.GetAllStoresForDistrictReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.GetAllStoresForDistrictReply;
  return proto.BackendApi.GetAllStoresForDistrictReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.GetAllStoresForDistrictReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.GetAllStoresForDistrictReply}
 */
proto.BackendApi.GetAllStoresForDistrictReply.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.BackendApi.Store;
        reader.readMessage(value, proto.BackendApi.Store.deserializeBinaryFromReader);
        msg.addList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.GetAllStoresForDistrictReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.GetAllStoresForDistrictReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.GetAllStoresForDistrictReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.GetAllStoresForDistrictReply.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.BackendApi.Store.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Store list = 1;
 * @return {!Array<!proto.BackendApi.Store>}
 */
proto.BackendApi.GetAllStoresForDistrictReply.prototype.getListList = function () {
  return /** @type{!Array<!proto.BackendApi.Store>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BackendApi.Store, 1));
};


/**
 * @param {!Array<!proto.BackendApi.Store>} value
 * @return {!proto.BackendApi.GetAllStoresForDistrictReply} returns this
*/
proto.BackendApi.GetAllStoresForDistrictReply.prototype.setListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.BackendApi.Store=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BackendApi.Store}
 */
proto.BackendApi.GetAllStoresForDistrictReply.prototype.addList = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BackendApi.Store, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BackendApi.GetAllStoresForDistrictReply} returns this
 */
proto.BackendApi.GetAllStoresForDistrictReply.prototype.clearListList = function () {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.AddSalesPersonToDistrictRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.AddSalesPersonToDistrictRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.AddSalesPersonToDistrictRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      districtid: jspb.Message.getFieldWithDefault(msg, 1, 0),
      salespersonid: jspb.Message.getFieldWithDefault(msg, 2, 0),
      isprimary: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.AddSalesPersonToDistrictRequest}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.AddSalesPersonToDistrictRequest;
  return proto.BackendApi.AddSalesPersonToDistrictRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.AddSalesPersonToDistrictRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.AddSalesPersonToDistrictRequest}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDistrictid(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSalespersonid(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsprimary(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.AddSalesPersonToDistrictRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.AddSalesPersonToDistrictRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSalespersonid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsprimary();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 districtId = 1;
 * @return {number}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.getDistrictid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.AddSalesPersonToDistrictRequest} returns this
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.setDistrictid = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 salesPersonId = 2;
 * @return {number}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.getSalespersonid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.AddSalesPersonToDistrictRequest} returns this
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.setSalespersonid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool isPrimary = 3;
 * @return {boolean}
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.getIsprimary = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BackendApi.AddSalesPersonToDistrictRequest} returns this
 */
proto.BackendApi.AddSalesPersonToDistrictRequest.prototype.setIsprimary = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.RemoveSalesPersonFromDistrictRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.RemoveSalesPersonFromDistrictRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      districtid: jspb.Message.getFieldWithDefault(msg, 1, 0),
      salespersonid: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest}
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.RemoveSalesPersonFromDistrictRequest;
  return proto.BackendApi.RemoveSalesPersonFromDistrictRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest}
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDistrictid(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSalespersonid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.RemoveSalesPersonFromDistrictRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSalespersonid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 districtId = 1;
 * @return {number}
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.getDistrictid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest} returns this
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.setDistrictid = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 salesPersonId = 2;
 * @return {number}
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.getSalespersonid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.RemoveSalesPersonFromDistrictRequest} returns this
 */
proto.BackendApi.RemoveSalesPersonFromDistrictRequest.prototype.setSalespersonid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.SalesPerson.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.SalesPerson.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.SalesPerson} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.SalesPerson.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      name: jspb.Message.getFieldWithDefault(msg, 2, ""),
      isprimary: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.SalesPerson}
 */
proto.BackendApi.SalesPerson.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.SalesPerson;
  return proto.BackendApi.SalesPerson.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.SalesPerson} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.SalesPerson}
 */
proto.BackendApi.SalesPerson.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsprimary(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.SalesPerson.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.SalesPerson.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.SalesPerson} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.SalesPerson.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsprimary();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.BackendApi.SalesPerson.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.SalesPerson} returns this
 */
proto.BackendApi.SalesPerson.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.BackendApi.SalesPerson.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BackendApi.SalesPerson} returns this
 */
proto.BackendApi.SalesPerson.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isPrimary = 3;
 * @return {boolean}
 */
proto.BackendApi.SalesPerson.prototype.getIsprimary = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BackendApi.SalesPerson} returns this
 */
proto.BackendApi.SalesPerson.prototype.setIsprimary = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.District.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.District.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.District} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.District.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      name: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.District}
 */
proto.BackendApi.District.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.District;
  return proto.BackendApi.District.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.District} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.District}
 */
proto.BackendApi.District.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.District.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.District.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.District} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.District.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.BackendApi.District.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.District} returns this
 */
proto.BackendApi.District.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.BackendApi.District.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BackendApi.District} returns this
 */
proto.BackendApi.District.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BackendApi.Store.prototype.toObject = function (opt_includeInstance) {
    return proto.BackendApi.Store.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BackendApi.Store} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BackendApi.Store.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      districtid: jspb.Message.getFieldWithDefault(msg, 2, 0),
      city: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BackendApi.Store}
 */
proto.BackendApi.Store.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BackendApi.Store;
  return proto.BackendApi.Store.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BackendApi.Store} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BackendApi.Store}
 */
proto.BackendApi.Store.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDistrictid(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setCity(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BackendApi.Store.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BackendApi.Store.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BackendApi.Store} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BackendApi.Store.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.BackendApi.Store.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.Store} returns this
 */
proto.BackendApi.Store.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 districtId = 2;
 * @return {number}
 */
proto.BackendApi.Store.prototype.getDistrictid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BackendApi.Store} returns this
 */
proto.BackendApi.Store.prototype.setDistrictid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.BackendApi.Store.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BackendApi.Store} returns this
 */
proto.BackendApi.Store.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.BackendApi);
